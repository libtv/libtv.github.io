<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="http://localhost:4000/author/libtv/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2021-05-05T18:36:36+09:00</updated>
  <id>http://localhost:4000/author/libtv/feed.xml</id>

  
  
  

  
    <title type="html">준호의 개발일지 | </title>
  

  
    <subtitle>Spring, Node, Javascript, Vue, etc... I love development</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Spring 개발일지(2) - 개발환경 구축</title>
      <link href="http://localhost:4000/spring-num2" rel="alternate" type="text/html" title="Spring 개발일지(2) - 개발환경 구축" />
      <published>2021-05-04T20:40:00+09:00</published>
      <updated>2021-05-04T20:40:00+09:00</updated>
      <id>http://localhost:4000/spring-num2</id>
      <content type="html" xml:base="http://localhost:4000/spring-num2">&lt;!--
   &lt; 준호가 이용할 태그 정리&gt;
   &lt;code class=&quot;highlighter-rouge&quot;&gt; &lt;/code&gt;                    : 어떠한 문장이나 단어를 하이라이트 할 때 사용합니다.
   &lt;a target=&quot;_blank&quot;&gt; &lt;/a&gt;                                    : a 태그를 이용하여 문서를 이동하는데 사용합니다.
   &lt;p&gt;&lt;strong  class=&quot;subtitle_fontAwesome&quot;&gt; &lt;/strong&gt;&lt;/p&gt;     : 주제를 기록할 때 사용합니다.
   &gt;                                                           : 설명할 때 사용합니다.
   &gt;  ** **                                                    : 코드를 적어야 하는 경우 사용합니다.
   &lt;noscript&gt;&lt;pre&gt;# Jekyll configuration
markdown: kramdown
highlighter: rouge
paginate: 100 # it will paginate after this number
language: &amp;#39;en-uk&amp;#39;
words_per_minute: 200

# edit baseurl to simply &amp;#39;/&amp;#39; if using as your personal page (instead of a project page)
baseurl: /

# Website info
title: 웹 개발자, 김준호의 블로그
description: The professional publishing platform
cover: assets/images/blog-cover.jpg
logo: assets/images/blog-icon.png
logo_dark: assets/images/favicon.png
favicon: assets/images/favicon.png
CNAME: #add cname for website to be created

# Social info
navigation: True # show the navbar links
subscribers: True # you need to connect an external service for this to work,
# if &amp;#39;True&amp;#39; the submit button is disabled for now, but you can change that
# by editing `_includes/subscribe-form.html`
twitter:  # replace by your username
facebook:  # replace by your username

# Disqus
disqus: False
disqus_shortname: jekyller # replace with your disqus username

# Google Analytics
google_analytics: UA-69281367-1 # replace with your GA tracking identifier

# Permalinks
permalink: /:title
# permalink: /author/:author
# permalink: /tag/:tag

# Authors&amp;#39; info in `_data/authors.yml`
# Tags&amp;#39; info in `_data/tags_info.yml`

# gems and other configs
plugins_dir: [_plugins]
plugins: [jekyll-paginate, jekyll-feed]

feed:
  path: feed.xml

# Additional settings available on the front-matter
# Site logo in the index.html (as in demo.ghost.io)
# Author&amp;#39;s page cover in _layouts/author.html
# The same for page.html and tag.html layouts
# Post&amp;#39;s page cover as a per-post basis _posts/...
# Disqus comments as a per-post basis
# ...

# Settings for building master branch with travis-ci
# with jekyll-travis

# Settings for deploy rake task
# Username and repo of Github repo, e.g.
# https://github.com/USERNAME/REPO.git
# username defaults to ENV[&amp;#39;GIT_NAME&amp;#39;] used by Travis
# repo defaults to USERNAME.github.io
# Branch defaults to &amp;quot;source&amp;quot; for USERNAME.github.io
# or &amp;quot;master&amp;quot; otherwise
safe: False
lsi: False
username: libtv
repo: libtv.github.io
branch: master
relative_source: 
destination: ../jasper2-pages/
production_url:  https://libtv.github.io/
source_url:  https://github.com/libtv/libtv.github.io/

exclude:
  - assets/css
  - node_modules
  - vendor
  - .travis.yml
  - Gemfile
  - Gemfile.lock
  - GHOST.txt
  - gulpfile.js
  - LICENSE
  - package.json
  - package-lock.json
  - Rakefile
  - README.md
  - script.py
  - changelog.md
  - &amp;quot;*.Rmd&amp;quot;
  - .git*
  - backup
&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/libtv/b04c361f69890ed6927fbfaddabaf612.js&quot;&gt; &lt;/script&gt;           : gist 코드입니다.
   ![name](assets/images/spring/spring1_1.png)                 : image를 삽입하는 코드입니다.
 --&gt;

&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 개발일지는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./spring-num1&quot;&gt;Spring 개발일지(1) - 기본적인 상식&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./spring-num2&quot;&gt;Spring 개발일지(2) - 개발환경 구축&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong class=&quot;subtitle_fontAwesome&quot;&gt;설명하기에 앞서&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;안녕하세요. 풀스택 개발자를 위해 달려나가는 &lt;a target=&quot;_blank&quot;&gt;김준호&lt;/a&gt; 입니다.
&lt;br /&gt;이번 블로그 내용에서는 
&lt;code class=&quot;highlighter-rouge&quot;&gt;자바&lt;/code&gt;와 
&lt;code class=&quot;highlighter-rouge&quot;&gt;이클립스&lt;/code&gt;를 가지고 스프링 개발 환경을 위한 설치 및 환경 설정에 관한 내용입니다. 
처음 자바를 배우시는 분들은 
&lt;code class=&quot;highlighter-rouge&quot;&gt;스프링&lt;/code&gt;을 시작하는 것 보다는 &lt;code class=&quot;highlighter-rouge&quot;&gt;자바&lt;/code&gt;를 먼저 사전지식을 얻고 난 후 스프링을 하시는 것이 바람직하다고 생각합니다. 그러면 시작해보도록 하겠습니다.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong class=&quot;subtitle_fontAwesome&quot;&gt;개발환경 구축을 위한 준비물&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;스프링에 필요한 준비물은 자바와 이클립스 최소한의 설치로 개발환경을 구축할 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;자바&lt;/strong&gt; : 개발자는 &lt;code class=&quot;highlighter-rouge&quot;&gt;JAVA JDK&lt;/code&gt;가 있어야 개발을 할 수 있고, 프로그램만 실행하기 위해서는 JAVA JRE만 설치되어 있으면  됩니다.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;이클립스&lt;/strong&gt; : 기본적으로 스프링을 개발할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;STS&lt;/code&gt;를 많이 이용하지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;전자정부프레임워크&lt;/code&gt;를 이용하여 개발하려고 합니다.&lt;br /&gt;
그러면 이러한 준비물을 실제로 인스톨하는 과정을 보여드리도록 하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong class=&quot;subtitle_fontAwesome&quot;&gt;자바 설치&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;설치하기 전에 오라클과 자바에 대해 간략하게 보도록 합시다. 오라클이란 간략하게 미국 캘리포니아주에 본사를 둔 매출 규모 세계 2위의 소프트웨어 회사입니다. 이 회사의 대표적인 제품인 데이터베이스 제품, &lt;code class=&quot;highlighter-rouge&quot;&gt;오라클 DBMS&lt;/code&gt;는 세계 최고의 점유율을 차지하고 있다고 합니다. 자바를 사용하기 위해서는 오라클의 자바를 많이 사용하는데, 오라클이 자바 과금 정책 변경을 선언한 지 2년이 지났습니다. 기업들은 이러한 오라클의 자바를 이용하기 위해서 일정 수준의 과금을 내고, 자바 사용을 해야 하는데, 현재 이러한 부분 때문에 기업에서는 OpenJDK를 많이 사용합니다. 자세한 사항은 &lt;a href=&quot;https://mine-it-record.tistory.com/7&quot; target=&quot;_blank&quot;&gt;JAVA 유료 논쟁&lt;/a&gt;의 블로그를 참조하기를 바랍니다.
&lt;br /&gt;지금은 설치부터 하자구요!!&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;먼저 &lt;a href=&quot;https://www.oracle.com/kr/java/technologies/javase-downloads.html&quot; target=&quot;_blank&quot;&gt;오라클&lt;/a&gt;에 들어가보도록 합시다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_1.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;

&lt;p&gt;오라클을 홈페이지에 가면 다음과 같은 사이트의 UI가 표시되는 것을 볼 수 있습니다. 현재 작성 기준일 &lt;code class=&quot;highlighter-rouge&quot;&gt;2021-05-05&lt;/code&gt; 에서는 SE 16버전이 첫번째로 나와있네요. 점점 더 업그레이드 가면서 UI와 버전도 달라질 수 있으니, 현재 이미지는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Reference&lt;/code&gt;만 해 주시기 바랍니다. 
16버전도 있고, 11버전 등등 .. 쭉 내려가다 보면 JDK SE 8 버전이 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;주의사항&lt;/strong&gt; : Visual Code를 사용하고 계신 분들은 JDK Version을 11 이상으로 설치해야만 합니다.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_2.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;저희는 &lt;code class=&quot;highlighter-rouge&quot;&gt;JDK SE 8 Version&lt;/code&gt;을 설치합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JDK SE 8버전을 사용하는 이유는 실무에서 가장 많이 사용하고 있는 JDK 버전이며, 전자정부프레임워크에서는 1.8 버전을 기준으로 상용화되고 있다고 합니다. 구동을 하는데 안정화가 된 버전을 저는 추천드립니다.
&lt;br /&gt; 그러면 설치해보도록 합시다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_3.png&quot; alt=&quot;오라클&quot; /&gt;
&lt;img src=&quot;assets/images/spring/spring1_4.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;각자 맞는 &lt;code class=&quot;highlighter-rouge&quot;&gt;운영체제&lt;/code&gt;를 찾아서 다운로드 하면 됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;다운받으려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;오라클 아이디&lt;/code&gt;를 가지고 있어야 하기 때문에 오라클 아이디가 있으신 분은 바로 설치하면 되고, 없으신 분은 &lt;a href=&quot;https://comclothing.tistory.com/24&quot; target=&quot;_blank&quot;&gt;Reference Blog&lt;/a&gt;를 참고하셔서 회원가입 후에 다운을 받아주세요.&lt;br /&gt;
자 이제 exe를 실행시키도록 합시다. 실행시키게 되면 아래와 같은 화면이 나오게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_5.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;인스톨 위자드가 떴습니다. 그러면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Next&lt;/code&gt; 버튼을 눌러주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_6.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;설치 위치를 결정하는데 Default로 그대로 설치하는 편입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Next&lt;/code&gt; 버튼을 눌러주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_8.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;설치 도중에 JRE 설치가 뜨는 모습입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Next&lt;/code&gt; 버튼을 눌러주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_9.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;설치 &lt;code class=&quot;highlighter-rouge&quot;&gt;진행중&lt;/code&gt;입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_10.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;설치가 완료되었습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Close&lt;/code&gt; 버튼을 눌러주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JAVA 설치가 되었으면 보통 &lt;code class=&quot;highlighter-rouge&quot;&gt;환경변수 설정&lt;/code&gt;도 해주는 편입니다. cmd창에서 사용자가 직접 &lt;code class=&quot;highlighter-rouge&quot;&gt;Compile&lt;/code&gt;을 할 때 사용합니다. 환경 변수 설정을 안하셔도 이클립스를 이용하는데 지장이 없습니다. 혹시 환경변수가 필요하다고 생각하시는 분들은 &lt;a href=&quot;https://macchiato.tistory.com/9&quot; target=&quot;_blank&quot;&gt;Reference Blog&lt;/a&gt;를 참고하시기 바랍니다.&lt;br /&gt;자바가 잘 설치되었는지 확인하는 방법은 아래 코드를 &lt;a href=&quot;https://editorizer.tistory.com/200&quot; target=&quot;_blank&quot;&gt;CMD창&lt;/a&gt;에 입력하세요.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;java -version&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_11.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;

&lt;p&gt;코드를 입력하면 위와 같이 자바 설치 버전을 확인할 수 있습니다. 여기까지 잘 따라오셨으면 자바 설치는 정상적으로 된 것입니다. 축하드립니다!!&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong class=&quot;subtitle_fontAwesome&quot;&gt;이클립스[전자정부프레임워크] 설치&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;전자정부프레임워크를 사용하여 개발을 할 때 사용하는 이클립스는 조금 다릅니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;전자정부프레임워크&lt;/code&gt;는 대한민국의 공공부문 정보화 사업 시 플랫폼별 표준화된 개발 프레임워크를 말하는 것입니다. 궁금사항들은 다른 블로그를 구글 검색을 이용해보세요! 그러면 설치해보도록 합시다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;주의사항&lt;/strong&gt; : 전자정부프레임워크의 버전은 3.9 버전을 이용하고 있습니다. 다른 버전들은 블로그의 내용을 참고하고, 설치하는데 지장이 없으시길 바라겠습니다. &lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;먼저 &lt;a href=&quot;https://www.egovframe.go.kr/&quot; target=&quot;_blank&quot;&gt;전자정부프레임워크&lt;/a&gt;에 들어가보도록 합시다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;./assets/images/spring/spring1_20.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;현재 작성 기준일 &lt;code class=&quot;highlighter-rouge&quot;&gt;2021-05-05&lt;/code&gt; 에서의 UI는 이러한 형식으로 되어 있습니다. 항상 바뀔 수 있다는 점 명시해주세요!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;./assets/images/spring/spring1_21.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;자 그러면 위쪽에 &lt;code class=&quot;highlighter-rouge&quot;&gt;다운로드&lt;/code&gt; 버튼을 눌러주세요.&lt;br /&gt;
그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;개발환경&lt;/code&gt; 버튼을 먼저 누르신 다음 &lt;code class=&quot;highlighter-rouge&quot;&gt;3.x 다운로드&lt;/code&gt; 버튼을 눌러주세요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;./assets/images/spring/spring1_22.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;[3.9.0]버전의 개발자용 개발환경 32&amp;amp;64bit 를 눌러줍시다.&lt;br /&gt;
그리고 개인 컴퓨터에 맞는  &lt;code class=&quot;highlighter-rouge&quot;&gt;Bit&lt;/code&gt; 를 인지해주시고, 알맞은 exe를 다운로드 해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;exe를 실행시키면 반디집으로 압축이 해제됩니다. 경로가 길어서 압축해제가 안될 수 있으니 &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\&lt;/code&gt; 드라이브 혹은 최대한 &lt;code class=&quot;highlighter-rouge&quot;&gt;짧은 경로&lt;/code&gt;에 압축해제 하시면 되겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;./assets/images/spring/spring1_23.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;자 이제 압축이 해제됬으면 위와 같은 파일들이 나오게 됩니다. &lt;br /&gt;이클립스를 &lt;code class=&quot;highlighter-rouge&quot;&gt;구동&lt;/code&gt;시켜 보도록 하죠!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_24.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;이러한 로고가 뜨면서 이클립스 동작을 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;캐시&lt;/code&gt;를 쓰고 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/spring/spring1_25.png&quot; alt=&quot;오라클&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;자.. 이클립스가 &lt;code class=&quot;highlighter-rouge&quot;&gt;구동&lt;/code&gt;되었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;원래 처음상태의 이클립스는 Basic Theme를 가지고 있지만 저는 다른 Theme를 사용하고 있었기에 모습이 다를 수 밖에 없을겁니다. 정상적으로 이클립스가 구동이 되었으면 현재 개발환경 준비는 완료된 상태입니다.&lt;br /&gt;
다음 게시글에서는 스프링 프로젝트를 생성하는 방법에 대해 알아보겠습니다.&lt;br /&gt;&lt;br /&gt;
다들 수고하셨습니다!!!!!!!!!!!!!!!!!!!!&lt;/p&gt;

&lt;!-- 
&lt;code class=&quot;highlighter-rouge&quot;&gt;GitHub Page&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;rouge&lt;/code&gt;
--&gt;
&lt;!--
&lt;p&gt;자 이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;C:/blogmaker/assets/css/syntax.css&lt;/code&gt; 파일이 생성되었습니다.&lt;/p&gt;

이 글은 python basic 입니다.!!
~~~javascript
function syntaxHighlight(code) {
   var foo = 'Hello World';
   var bar = 100;
}
~~~



&lt;noscript&gt;&lt;pre&gt;# Jekyll configuration
markdown: kramdown
highlighter: rouge
paginate: 100 # it will paginate after this number
language: &amp;#39;en-uk&amp;#39;
words_per_minute: 200

# edit baseurl to simply &amp;#39;/&amp;#39; if using as your personal page (instead of a project page)
baseurl: /

# Website info
title: 웹 개발자, 김준호의 블로그
description: The professional publishing platform
cover: assets/images/blog-cover.jpg
logo: assets/images/blog-icon.png
logo_dark: assets/images/favicon.png
favicon: assets/images/favicon.png
CNAME: #add cname for website to be created

# Social info
navigation: True # show the navbar links
subscribers: True # you need to connect an external service for this to work,
# if &amp;#39;True&amp;#39; the submit button is disabled for now, but you can change that
# by editing `_includes/subscribe-form.html`
twitter:  # replace by your username
facebook:  # replace by your username

# Disqus
disqus: False
disqus_shortname: jekyller # replace with your disqus username

# Google Analytics
google_analytics: UA-69281367-1 # replace with your GA tracking identifier

# Permalinks
permalink: /:title
# permalink: /author/:author
# permalink: /tag/:tag

# Authors&amp;#39; info in `_data/authors.yml`
# Tags&amp;#39; info in `_data/tags_info.yml`

# gems and other configs
plugins_dir: [_plugins]
plugins: [jekyll-paginate, jekyll-feed]

feed:
  path: feed.xml

# Additional settings available on the front-matter
# Site logo in the index.html (as in demo.ghost.io)
# Author&amp;#39;s page cover in _layouts/author.html
# The same for page.html and tag.html layouts
# Post&amp;#39;s page cover as a per-post basis _posts/...
# Disqus comments as a per-post basis
# ...

# Settings for building master branch with travis-ci
# with jekyll-travis

# Settings for deploy rake task
# Username and repo of Github repo, e.g.
# https://github.com/USERNAME/REPO.git
# username defaults to ENV[&amp;#39;GIT_NAME&amp;#39;] used by Travis
# repo defaults to USERNAME.github.io
# Branch defaults to &amp;quot;source&amp;quot; for USERNAME.github.io
# or &amp;quot;master&amp;quot; otherwise
safe: False
lsi: False
username: libtv
repo: libtv.github.io
branch: master
relative_source: 
destination: ../jasper2-pages/
production_url:  https://libtv.github.io/
source_url:  https://github.com/libtv/libtv.github.io/

exclude:
  - assets/css
  - node_modules
  - vendor
  - .travis.yml
  - Gemfile
  - Gemfile.lock
  - GHOST.txt
  - gulpfile.js
  - LICENSE
  - package.json
  - package-lock.json
  - Rakefile
  - README.md
  - script.py
  - changelog.md
  - &amp;quot;*.Rmd&amp;quot;
  - .git*
  - backup
&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/libtv/b04c361f69890ed6927fbfaddabaf612.js&quot;&gt; &lt;/script&gt; 
--&gt;</content>

      
      
      
      
      

      <author>
          <name>김준호</name>
        
        
      </author>

      

      
        <category term="spring" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Jekyll 강좌(1) - Jekyll 기본</title>
      <link href="http://localhost:4000/jekyll-basic" rel="alternate" type="text/html" title="Jekyll 강좌(1) - Jekyll 기본" />
      <published>2021-05-03T01:40:00+09:00</published>
      <updated>2021-05-03T01:40:00+09:00</updated>
      <id>http://localhost:4000/jekyll-basic</id>
      <content type="html" xml:base="http://localhost:4000/jekyll-basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Jekyll 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./jekyll-basic&quot;&gt;Jekyll 강좌(1) - Jekyll 기본&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;출처&lt;/strong&gt; :  &lt;a href=&quot;https://moon9342.github.io/jekyll-start&quot; target=&quot;_blank&quot;&gt;Refercence Blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content>

      
      
      
      
      

      <author>
          <name>김준호</name>
        
        
      </author>

      

      
        <category term="jekyll" />
      

      
        <summary type="html">Jekyll 강좌는 여러 절로 구성되어 있습니다. Jekyll 강좌(1) - Jekyll 기본</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python 강좌(2) - Python 제어문</title>
      <link href="http://localhost:4000/python-control-statement" rel="alternate" type="text/html" title="Python 강좌(2) - Python 제어문" />
      <published>2021-05-03T01:40:00+09:00</published>
      <updated>2021-05-03T01:40:00+09:00</updated>
      <id>http://localhost:4000/python-control-statement</id>
      <content type="html" xml:base="http://localhost:4000/python-control-statement">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-basic&quot;&gt;Python 강좌(1) - Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;Python 강좌(2) - Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 글은 python 제어문 입니다.!!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>김준호</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 기본 Python 강좌(2) - Python 제어문</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Spring 개발일지(1) - 기본적인 상식</title>
      <link href="http://localhost:4000/spring-num1" rel="alternate" type="text/html" title="Spring 개발일지(1) - 기본적인 상식" />
      <published>2021-05-02T01:40:00+09:00</published>
      <updated>2021-05-02T01:40:00+09:00</updated>
      <id>http://localhost:4000/spring-num1</id>
      <content type="html" xml:base="http://localhost:4000/spring-num1">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Spring 개발일지는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./spring-num1&quot;&gt;Spring 개발일지(1) - 기본적인 상식&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./spring-num2&quot;&gt;Spring 개발일지(2) - 개발환경 구축&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong class=&quot;subtitle_fontAwesome&quot;&gt;스프링 프레임워크&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%8A%A4%ED%94%84%EB%A7%81_%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC&quot; target=&quot;_blank&quot;&gt;스프링 프레임워크&lt;/a&gt; (“영어”): Spring Framework)는 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_(%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4_%ED%94%8C%EB%9E%AB%ED%8F%BC)&quot;&gt;자바 플랫폼&lt;/a&gt;을 위한 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%98%A4%ED%94%88_%EC%86%8C%EC%8A%A4&quot; title=&quot;오픈 소스&quot;&gt;오픈 소스&lt;/a&gt;  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98_%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC&quot; title=&quot;애플리케이션 프레임워크&quot;&gt;애플리케이션 프레임워크&lt;/a&gt;로서 간단히 &lt;strong&gt;스프링&lt;/strong&gt;(Spring)이라고도 한다. 동적인 웹 사이트를 개발하기 위한 여러 가지 서비스를 제공하고 있다. 대한민국 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B3%B5%EA%B3%B5%EA%B8%B0%EA%B4%80&quot; title=&quot;공공기관&quot;&gt;공공기관&lt;/a&gt;의 웹 서비스 개발 시 사용을 권장하고 있는 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%A0%84%EC%9E%90%EC%A0%95%EB%B6%80_%ED%91%9C%EC%A4%80%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC&quot; title=&quot;전자정부 표준프레임워크&quot;&gt;전자정부 표준프레임워크&lt;/a&gt;의 기반 기술로서 쓰이고 있다.&lt;/p&gt;

&lt;p&gt;스프링은 다른 프레임워크에 비해 다음과 같은 특징을 가진다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;경량 컨테이너로서 자바 객체를 직접 관리한다. 각각의 객체 생성, 소멸과 같은 라이프 사이클을 관리하며 스프링으로부터 필요한 객체를 얻어올 수 있다.&lt;/li&gt;
  &lt;li&gt;스프링은  &lt;a href=&quot;https://ko.wikipedia.org/wiki/Plain_Old_Java_Object&quot; title=&quot;자바 (소프트웨어 플랫폼)&quot;&gt;Plain Old Java Object&lt;/a&gt;  방식의 프레임워크이다. 일반적인  &lt;a href=&quot;https://ko.wikipedia.org/wiki/J2EE&quot; title=&quot;J2EE&quot;&gt;J2EE&lt;/a&gt;  프레임워크에 비해 구현을 위해 특정한  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4&quot; title=&quot;인터페이스&quot;&gt;인터페이스&lt;/a&gt;를 구현하거나 상속을 받을 필요가 없어 기존에 존재하는  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC&quot; title=&quot;라이브러리&quot;&gt;라이브러리&lt;/a&gt;  등을 지원하기에 용이하고 객체가 가볍다.&lt;/li&gt;
  &lt;li&gt;스프링은  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%A0%9C%EC%96%B4_%EB%B0%98%EC%A0%84&quot; title=&quot;제어 반전&quot;&gt;제어 반전&lt;/a&gt;(IoC : Inversion of Control)을 지원한다. 컨트롤의 제어권이 사용자가 아니라 프레임워크에 있어서 필요에 따라 스프링에서 사용자의 코드를 호출한다.&lt;/li&gt;
  &lt;li&gt;스프링은  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9D%98%EC%A1%B4%EC%84%B1_%EC%A3%BC%EC%9E%85&quot; title=&quot;의존성 주입&quot;&gt;의존성 주입&lt;/a&gt;(DI : Dependency Injection)을 지원한다. 각각의 계층이나 서비스들 간에 의존성이 존재할 경우 프레임워크가 서로 연결시켜준다.&lt;/li&gt;
  &lt;li&gt;스프링은  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B4%80%EC%A0%90_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot; title=&quot;관점 지향 프로그래밍&quot;&gt;관점 지향 프로그래밍&lt;/a&gt;(AOP : Aspect-Oriented Programming)을 지원한다. 따라서  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98&quot; title=&quot;트랜잭션&quot;&gt;트랜잭션&lt;/a&gt;이나 로깅, 보안과 같이 여러 모듈에서 공통적으로 사용하는 기능의 경우 해당 기능을 분리하여 관리할 수 있다.&lt;/li&gt;
  &lt;li&gt;스프링은 영속성과 관련된 다양한 서비스를 지원한다.  &lt;a href=&quot;https://ko.wikipedia.org/wiki/IBATIS&quot; title=&quot;IBATIS&quot;&gt;iBATIS&lt;/a&gt;나  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%95%98%EC%9D%B4%EB%B2%84%EB%84%A4%EC%9D%B4%ED%8A%B8&quot;&gt;하이버네이트&lt;/a&gt;  등 이미 완성도가 높은 데이터베이스 처리 라이브러리와 연결할 수 있는 인터페이스를 제공한다.&lt;/li&gt;
  &lt;li&gt;스프링은 확장성이 높다. 스프링 프레임워크에 통합하기 위해 간단하게 기존 라이브러리를 감싸는 정도로 스프링에서 사용이 가능하기 때문에 수많은 라이브러리가 이미 스프링에서 지원되고 있고 스프링에서 사용되는 라이브러리를 별도로 분리하기도 용이하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;요약&quot;&gt;요약&lt;br /&gt;&lt;br /&gt;&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;IOC&lt;/strong&gt; : 제어권을 사용자가 아니라 프레임워크가 가지고 있다.&lt;br /&gt;
 &lt;strong&gt;DI&lt;/strong&gt; : 의존하는 관계나 설정들을 프레임워크가 서로 연결시켜 준다.&lt;br /&gt;
 &lt;strong&gt;AOP&lt;/strong&gt; : 관점 지향 프로그래밍을 통해 여러 모듈에서 사용하는 공통적인 기능을 Proxy 생성으로 분리 가능&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong class=&quot;subtitle_fontAwesome&quot;&gt;주요 모듈&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. 제어 반전 컨테이너&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%A0%9C%EC%96%B4_%EB%B0%98%EC%A0%84&quot; title=&quot;전자정부 표준프레임워크&quot;&gt;제어 반전&lt;/a&gt;(IoC: Inversion of Control) 컨테이너는 스프링의 가장 중요하고 핵심적인 기능으로서 자바의  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B0%98%EC%98%81_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)&quot; title=&quot;반영 (컴퓨터 과학)&quot;&gt;반영&lt;/a&gt;(reflection)을 이용해서 객체의 생명주기를 관리하고  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9D%98%EC%A1%B4%EC%84%B1_%EC%A3%BC%EC%9E%85&quot;&gt;의존성 주입&lt;/a&gt;(Dependency Injection)을 통해 각 계층이나 서비스들간의 의존성을 맞춰준다. 이러한 기능들은 주로 환경설정을 담당하는 XML 파일에 의해 설정되고 수행된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 관점 지향 프로그래밍 프레임워크&lt;/strong&gt;&lt;br /&gt;
스프링은 로깅이나 보안, 트랜잭션 등 핵심적인 비즈니스 로직과 관련이 없으나 여러 곳에서 공통적으로 쓰이는 기능들을 분리하여 개발하고 실행 시에 서로 조합할 수 있는  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B4%80%EC%A0%90_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot; title=&quot;관점 지향 프로그래밍&quot;&gt;관점 지향 프로그래밍&lt;/a&gt;(AOP)을 지원한다. 기존에 널리 사용되고 있는 강력한 관점 지향 프로그래밍 프레임워크인  &lt;a href=&quot;https://ko.wikipedia.org/wiki/AspectJ&quot; title=&quot;AspectJ&quot;&gt;AspectJ&lt;/a&gt;도 내부적으로 사용할 수 있으며, 스프링 자체적으로 지원하는 실행시(Runtime)에 조합하는 방식도 지원한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 데이터 액세스 프레임워크&lt;/strong&gt;&lt;br /&gt;
스프링은  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4&quot; title=&quot;데이터베이스&quot;&gt;데이터베이스&lt;/a&gt;에 접속하고 자료를 저장 및 읽어오기 위한 여러 가지 유명한 라이브러리, 즉  &lt;a href=&quot;https://ko.wikipedia.org/wiki/JDBC&quot; title=&quot;JDBC&quot;&gt;JDBC&lt;/a&gt;,  &lt;a href=&quot;https://ko.wikipedia.org/wiki/IBATIS&quot; title=&quot;IBATIS&quot;&gt;iBATIS&lt;/a&gt;(&lt;a href=&quot;https://ko.wikipedia.org/wiki/MyBatis&quot; title=&quot;MyBatis&quot;&gt;MyBatis&lt;/a&gt;),  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%95%98%EC%9D%B4%EB%B2%84%EB%84%A4%EC%9D%B4%ED%8A%B8&quot; title=&quot;하이버네이트&quot;&gt;하이버네이트&lt;/a&gt;  등에 대한 지원 기능을 제공하여 데이터베이스 프로그래밍을 쉽게 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 트랜잭션 관리 프레임워크&lt;/strong&gt;&lt;br /&gt;
스프링은 추상화된  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98&quot; title=&quot;트랜잭션&quot;&gt;트랜잭션&lt;/a&gt;  관리를 지원하며 XML 설정파일 등을 이용한 선언적인 방식 및 프로그래밍을 통한 방식을 모두 지원한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. 모델-뷰-컨트롤러 패턴&lt;/strong&gt;&lt;br /&gt;
스프링은 웹 프로그램밍 개발 시 거의 표준적인 방식인  &lt;strong&gt;Spring MVC&lt;/strong&gt;라 불리는  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%AA%A8%EB%8D%B8-%EB%B7%B0-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC&quot; title=&quot;모델-뷰-컨트롤러&quot;&gt;모델-뷰-컨트롤러&lt;/a&gt;(MVC) 패턴을 사용한다. DispatcherServlet이 Controller 역할을 담당하여 각종 요청을 적절한 서비스에 분산시켜주며 이를 각 서비스들이 처리를 하여 결과를 생성하고 그 결과는 다양한 형식의 View 서비스들로 화면에 표시될 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. 배치 프레임워크&lt;/strong&gt;&lt;br /&gt;
스프링은 특정 시간대에 실행하거나 대용량의 자료를 처리하는데 쓰이는  &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9D%BC%EA%B4%84_%EC%B2%98%EB%A6%AC&quot; title=&quot;일괄 처리&quot;&gt;일괄 처리&lt;/a&gt;(Batch Processing)을 지원하는 배치 프레임워크를 제공한다. 기본적으로 스프링 배치는 Quartz 기반으로 동작한다.&lt;/p&gt;

&lt;!--
이 글은 python basic 입니다.!!
~~~javascript
function syntaxHighlight(code) {
   var foo = 'Hello World';
   var bar = 100;
}
~~~



&lt;noscript&gt;&lt;pre&gt;# Jekyll configuration
markdown: kramdown
highlighter: rouge
paginate: 100 # it will paginate after this number
language: &amp;#39;en-uk&amp;#39;
words_per_minute: 200

# edit baseurl to simply &amp;#39;/&amp;#39; if using as your personal page (instead of a project page)
baseurl: /

# Website info
title: 웹 개발자, 김준호의 블로그
description: The professional publishing platform
cover: assets/images/blog-cover.jpg
logo: assets/images/blog-icon.png
logo_dark: assets/images/favicon.png
favicon: assets/images/favicon.png
CNAME: #add cname for website to be created

# Social info
navigation: True # show the navbar links
subscribers: True # you need to connect an external service for this to work,
# if &amp;#39;True&amp;#39; the submit button is disabled for now, but you can change that
# by editing `_includes/subscribe-form.html`
twitter:  # replace by your username
facebook:  # replace by your username

# Disqus
disqus: False
disqus_shortname: jekyller # replace with your disqus username

# Google Analytics
google_analytics: UA-69281367-1 # replace with your GA tracking identifier

# Permalinks
permalink: /:title
# permalink: /author/:author
# permalink: /tag/:tag

# Authors&amp;#39; info in `_data/authors.yml`
# Tags&amp;#39; info in `_data/tags_info.yml`

# gems and other configs
plugins_dir: [_plugins]
plugins: [jekyll-paginate, jekyll-feed]

feed:
  path: feed.xml

# Additional settings available on the front-matter
# Site logo in the index.html (as in demo.ghost.io)
# Author&amp;#39;s page cover in _layouts/author.html
# The same for page.html and tag.html layouts
# Post&amp;#39;s page cover as a per-post basis _posts/...
# Disqus comments as a per-post basis
# ...

# Settings for building master branch with travis-ci
# with jekyll-travis

# Settings for deploy rake task
# Username and repo of Github repo, e.g.
# https://github.com/USERNAME/REPO.git
# username defaults to ENV[&amp;#39;GIT_NAME&amp;#39;] used by Travis
# repo defaults to USERNAME.github.io
# Branch defaults to &amp;quot;source&amp;quot; for USERNAME.github.io
# or &amp;quot;master&amp;quot; otherwise
safe: False
lsi: False
username: libtv
repo: libtv.github.io
branch: master
relative_source: 
destination: ../jasper2-pages/
production_url:  https://libtv.github.io/
source_url:  https://github.com/libtv/libtv.github.io/

exclude:
  - assets/css
  - node_modules
  - vendor
  - .travis.yml
  - Gemfile
  - Gemfile.lock
  - GHOST.txt
  - gulpfile.js
  - LICENSE
  - package.json
  - package-lock.json
  - Rakefile
  - README.md
  - script.py
  - changelog.md
  - &amp;quot;*.Rmd&amp;quot;
  - .git*
  - backup
&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/libtv/b04c361f69890ed6927fbfaddabaf612.js&quot;&gt; &lt;/script&gt; --&gt;</content>

      
      
      
      
      

      <author>
          <name>김준호</name>
        
        
      </author>

      

      
        <category term="spring" />
      

      
        <summary type="html">Spring 개발일지는 여러 절로 구성되어 있습니다. Spring 개발일지(1) - 기본적인 상식 Spring 개발일지(2) - 개발환경 구축 스프링 프레임워크 스프링 프레임워크 (“영어”): Spring Framework)는 자바 플랫폼을 위한 오픈 소스 애플리케이션 프레임워크로서 간단히 스프링(Spring)이라고도 한다. 동적인 웹 사이트를 개발하기 위한 여러 가지 서비스를 제공하고 있다. 대한민국 공공기관의 웹 서비스 개발 시 사용을 권장하고 있는 전자정부 표준프레임워크의 기반 기술로서 쓰이고 있다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Python 강좌(1) - Python 기본</title>
      <link href="http://localhost:4000/python-basic" rel="alternate" type="text/html" title="Python 강좌(1) - Python 기본" />
      <published>2021-05-02T01:40:00+09:00</published>
      <updated>2021-05-02T01:40:00+09:00</updated>
      <id>http://localhost:4000/python-basic</id>
      <content type="html" xml:base="http://localhost:4000/python-basic">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python 강좌는 여러 절로 구성되어 있습니다. &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-basic&quot;&gt;Python 강좌(1) - Python 기본&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;Python 강좌(2) - Python 제어문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 글은 python basic 입니다.!!&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;syntaxHighlight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;noscript&gt;&lt;pre&gt;# Jekyll configuration
markdown: kramdown
highlighter: rouge
paginate: 100 # it will paginate after this number
language: &amp;#39;en-uk&amp;#39;
words_per_minute: 200

# edit baseurl to simply &amp;#39;/&amp;#39; if using as your personal page (instead of a project page)
baseurl: /

# Website info
title: 웹 개발자, 김준호의 블로그
description: The professional publishing platform
cover: assets/images/blog-cover.jpg
logo: assets/images/blog-icon.png
logo_dark: assets/images/favicon.png
favicon: assets/images/favicon.png
CNAME: #add cname for website to be created

# Social info
navigation: True # show the navbar links
subscribers: True # you need to connect an external service for this to work,
# if &amp;#39;True&amp;#39; the submit button is disabled for now, but you can change that
# by editing `_includes/subscribe-form.html`
twitter:  # replace by your username
facebook:  # replace by your username

# Disqus
disqus: False
disqus_shortname: jekyller # replace with your disqus username

# Google Analytics
google_analytics: UA-69281367-1 # replace with your GA tracking identifier

# Permalinks
permalink: /:title
# permalink: /author/:author
# permalink: /tag/:tag

# Authors&amp;#39; info in `_data/authors.yml`
# Tags&amp;#39; info in `_data/tags_info.yml`

# gems and other configs
plugins_dir: [_plugins]
plugins: [jekyll-paginate, jekyll-feed]

feed:
  path: feed.xml

# Additional settings available on the front-matter
# Site logo in the index.html (as in demo.ghost.io)
# Author&amp;#39;s page cover in _layouts/author.html
# The same for page.html and tag.html layouts
# Post&amp;#39;s page cover as a per-post basis _posts/...
# Disqus comments as a per-post basis
# ...

# Settings for building master branch with travis-ci
# with jekyll-travis

# Settings for deploy rake task
# Username and repo of Github repo, e.g.
# https://github.com/USERNAME/REPO.git
# username defaults to ENV[&amp;#39;GIT_NAME&amp;#39;] used by Travis
# repo defaults to USERNAME.github.io
# Branch defaults to &amp;quot;source&amp;quot; for USERNAME.github.io
# or &amp;quot;master&amp;quot; otherwise
safe: False
lsi: False
username: libtv
repo: libtv.github.io
branch: master
relative_source: 
destination: ../jasper2-pages/
production_url:  https://libtv.github.io/
source_url:  https://github.com/libtv/libtv.github.io/

exclude:
  - assets/css
  - node_modules
  - vendor
  - .travis.yml
  - Gemfile
  - Gemfile.lock
  - GHOST.txt
  - gulpfile.js
  - LICENSE
  - package.json
  - package-lock.json
  - Rakefile
  - README.md
  - script.py
  - changelog.md
  - &amp;quot;*.Rmd&amp;quot;
  - .git*
  - backup
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/libtv/b04c361f69890ed6927fbfaddabaf612.js&quot;&gt; &lt;/script&gt;</content>

      
      
      
      
      

      <author>
          <name>김준호</name>
        
        
      </author>

      

      
        <category term="python" />
      

      
        <summary type="html">Python 강좌는 여러 절로 구성되어 있습니다. Python 강좌(1) - Python 기본 Python 강좌(2) - Python 제어문</summary>
      

      
      
    </entry>
  
</feed>
